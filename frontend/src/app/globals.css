@import 'tailwindcss';
@tailwind base;
@tailwind components;
@tailwind utilities;

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body {
    font-family: Arial, Helvetica, sans-serif;
  }

  .recharts-responsive-container {
    height: initial !important;
  }
}

@layer base {
  :root {
    --background: 238 100% 6%;
    --foreground: 210 40% 98%;
    --card: 225 100% 8%;
    --card-foreground: 210 40% 98%;
    --popover: 225 100% 8%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 224 21% 26%;
    --secondary-foreground: 210 40% 98%;
    --muted: 224 21% 26%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 224 21% 26%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 224 21% 26%;
    --input: 224 21% 26%;
    --ring: 224.3 76.3% 48%;
    --radius: 0.5rem;
    --chart-1: 194 100% 50%;
    --chart-5: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-2: 330 100% 62%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 225 100% 8%;
    --card-foreground: 210 40% 98%;
    --popover: 225 100% 8%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 224 21% 26%;
    --secondary-foreground: 210 40% 98%;
    --muted: 224 21% 26%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 224 21% 26%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 224 21% 26%;
    --input: 224 21% 26%;
    --ring: 224.3 76.3% 48%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

/* Custom scrollbar */
.scrollbar {
  scrollbar-width: thin;
  scrollbar-color: #00B3F3 #1E233B;
}

.scrollbar::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.scrollbar::-webkit-scrollbar-thumb {
  background-color: #282F47;
  border-radius: 10px;
  border: 2px solid #1E233B;
}

.scrollbar::-webkit-scrollbar-track {
  background-color: #1E233B;
  border-radius: 10px;
  border: 2px solid #282F47;
}

.footer {
  margin-top: auto;
}

/*hide unhide labels on navbar*/
/* Hide icon labels on small screens */

/* Show icon labels on medium screens and above */
@media (min-width: 768px) {
  .md:inline-block {
    display: inline-block;
  }
}

/* fade animations, not used anywhere */
.animate-fade-out {
  animation: fade-out 0.5s forwards;
}

.animate-fade-in {
  animation: fade-in 0.5s forwards;
}

@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}


/* frontend/src/styles/globals.css */
.feed-container {
  @apply flex flex-row w-full mx-10;
}

.sidebar {
  @apply w-64 bg-white p-4 border-r border-gray-200;
  flex-shrink: 0; /* Prevent the sidebar from shrinking */
}

.feed-content {
  @apply flex-1;
  padding-left: 20px; /* Add some padding to separate the sidebar from the content */
}

@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

.card { perspective: 800px;}
.content {transform-style: preserve-3d;}
.card:hover .content {transform: rotateY(.5turn);}

.front,
.back { backface-visibility: hidden;}
.back{ transform: rotateY(.5turn);}
/*
  ---break---
*/
@theme inline {
  --animate-marquee: marquee var(--duration) infinite linear;
  --animate-marquee-vertical: marquee-vertical var(--duration) linear infinite;
  @keyframes marquee {
  from {
    transform: translateX(0);
    }
  to {
    transform: translateX(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee-vertical {
  from {
    transform: translateY(0);
    }
  to {
    transform: translateY(calc(-100% - var(--gap)));
    }
  }
}
/*
  ---break---
*/
@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Checkbox animation */
.checkbox-wrapper input[type="checkbox"] {
  display: none;
}

.checkbox-wrapper .terms-label {
  cursor: pointer;
  display: flex;
  align-items: center;
}

.checkbox-wrapper .terms-label .label-text {
  margin-left: 10px;
}

.checkbox-wrapper .checkbox-svg {
  width: 15px;
  height: 15px;
}

.checkbox-wrapper .checkbox-box {
  fill: rgb(255, 255, 255);
  stroke: #2196F3;
  stroke-dasharray: 800;
  stroke-dashoffset: 800;
  border-radius: 6px;
  transition: stroke-dashoffset 0.6s ease-in;
}

.checkbox-wrapper .checkbox-tick {
  stroke: #2196F3;
  stroke-dasharray: 172;
  stroke-dashoffset: 172;
  transition: stroke-dashoffset 0.6s ease-in;
}

.checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-box,
  .checkbox-wrapper input[type="checkbox"]:checked + .terms-label .checkbox-tick {
  stroke-dashoffset: 0;
}


/* background for shared page */
*, *::before, *::after { box-sizing:border-box }
.ball {
  
  --delay:0s;
  --size:0.4;
  --speed: 20s;
  
  aspect-ratio:1;
  width:calc( 150% * var(--size) );
  
  background: linear-gradient(259.53deg, #000428 6.53%, #004e92 95.34%);
  filter:blur( 10vw );
  
  border-radius:50%;
  
  position:absolute;
  top:0;
  left:0;
  
  animation: loop var(--speed) infinite linear;
  animation-delay: var(--delay);
  transform-origin: 50% 50%;
  
  opacity:0.6;
}

@keyframes loop {
  0% { transform: translate3D( 0%, 51%, 0 ) rotate(0deg); }
  5% { transform: translate3D( 8%, 31%, 0 ) rotate(18deg); }
  10% { transform: translate3D( 22%, 13%, 0 ) rotate(36deg); }
  15% { transform: translate3D( 40%, 2%, 0 ) rotate(54deg); }
  20% { transform: translate3D( 46%, 21%, 0 ) rotate(72deg); }
  25% { transform: translate3D( 50%, 47%, 0 ) rotate(90deg); }
  30% { transform: translate3D( 53%, 80%, 0 ) rotate(108deg); }
  35% { transform: translate3D( 59%, 98%, 0 ) rotate(125deg); }
  40% { transform: translate3D( 84%, 89%, 0 ) rotate(144deg); }
  45% { transform: translate3D( 92%, 68%, 0 ) rotate(162deg); }
  50% { transform: translate3D( 99%, 47%, 0 ) rotate(180deg); }
  55% { transform: translate3D( 97%, 21%, 0 ) rotate(198deg); }
  60% { transform: translate3D( 80%, 7%, 0 ) rotate(216deg); }
  65% { transform: translate3D( 68%, 25%, 0 ) rotate(234deg); }
  70% { transform: translate3D( 59%, 41%, 0 ) rotate(251deg); }
  75% { transform: translate3D( 50%, 63%, 0 ) rotate(270deg); }
  80% { transform: translate3D( 38%, 78%, 0 ) rotate(288deg); }
  85% { transform: translate3D( 21%, 92%, 0 ) rotate(306deg); }
  90% { transform: translate3D( 3%, 79%, 0 ) rotate(324deg); }
  100% { transform: translate3D( 0%, 51%, 0 ) rotate(360deg); }
  
}

.glow-container {
  overflow-x:hidden;
  overflow-y: hidden;
  position:absolute;
  background:#0d0d0d;
  width:100%;
  min-height:100vh;
}

.glass {
  /* From https://css.glass */
background: rgba(54, 55, 61, 0.08);
border-radius: 16px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(14.9px);
-webkit-backdrop-filter: blur(14.9px);
}
